
const Customer = 1
const Shopkeeper = 1
const Admin = 1

set Users = {user1, user2}

USER(N=0,O=0,P=0) = USER[N][O][P],
USER[i:0..Customer][j:0..Shopkeeper][k:0..Admin] = (grantCustomer -> USER[Customer][j][k]
|grantShopkeeper -> USER[i][Shopkeeper][k]
|grantAdmin -> USER[i][j][Admin]
|revokeCustomer -> USER[0][j][k]
|revokeShopkeeper -> USER[i][0][k]
|revokeAdmin -> USER[i][j][0]
|login->ACTIONS[i][j][k]),

ACTIONS[i:0..Customer][j:0..Shopkeeper][k:0..Admin] = (
when(i==Customer) doCustomerStuff -> endCustomerSuff -> ACTIONS[i][j][k]
|when(j==Shopkeeper) doShopkeeperStuff -> endShopkeeperStuff -> ACTIONS[i][j][k]
|when(k==Admin) doAdminStuff -> endAdminStuff -> ACTIONS[i][j][k]
|logout ->USER[i][j][k]) 
\{grantCustomer, grantShopkeeper, grantAdmin, revokeCustomer, revokeShopkeeper, revokeAdmin}.

CUSTOMER = (
doCustomerStuff -> CUSTOMERACTIONS),
CUSTOMERACTIONS = (
browse -> CUSTOMERACTIONS
|search -> CUSTOMERACTIONS
|buy_book -> CUSTOMERACTIONS
|endCustomerSuff -> CUSTOMER).

SHOPKEEPER = (
doShopkeeperStuff -> SHOPKEEPERACTIONS),
SHOPKEEPERACTIONS = (
add_book -> SHOPKEEPERACTIONS
|remove_book -> SHOPKEEPERACTIONS
|endShopkeeperStuff -> SHOPKEEPER).

ADMIN = (
doAdminStuff -> ADMINACTIONS),
ADMINACTIONS = (
Users.grantCustomer -> ADMINACTIONS
|Users.grantShopkeeper -> ADMINACTIONS
|Users.grantAdmin -> ADMINACTIONS
|Users.revokeCustomer -> ADMINACTIONS
|Users.revokeShopkeeper -> ADMINACTIONS
|Users.revokeAdmin -> ADMINACTIONS
|endAdminStuff -> ADMIN).

||USERS = (
user1:USER(1,0,0)||user1::CUSTOMER||user1::SHOPKEEPER||user1::ADMIN
||user2:USER(0,1,1)||user2::CUSTOMER||user2::SHOPKEEPER||user2::ADMIN

/*
||user3:USER(0,0,1)||user3::CUSTOMER||user3::SHOPKEEPER||user3::ADMIN
||user4:USER(0,0,1)||user4::CUSTOMER||user4::SHOPKEEPER||user4::ADMIN
||user5:USER(0,0,1)||user5::CUSTOMER||user5::SHOPKEEPER||user5::ADMIN
*/

).
